{"version":3,"sources":["./src/app/pages/task-view/task-view.component.ts","./src/app/pages/task-view/task-view.component.html","./src/app/pages/login-page/login-page.component.ts","./src/app/pages/login-page/login-page.component.html","./src/app/pages/new-task/new-task.component.ts","./src/app/pages/new-task/new-task.component.html","./src/environments/environment.ts","./src/app/task.service.ts","./src/app/pages/edit-list/edit-list.component.ts","./src/app/pages/edit-list/edit-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/signup-page/signup-page.component.ts","./src/app/pages/signup-page/signup-page.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/web-req.interceptor.ts","./src/app/web-request.service.ts","./src/app/pages/edit-task/edit-task.component.ts","./src/app/pages/edit-task/edit-task.component.html","./src/app/pages/new-list/new-list.component.ts","./src/app/pages/new-list/new-list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\nimport { List } from 'src/app/models/list.model';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent implements OnInit {\n\n  lists: List[];\n  tasks: Task[];\n\n  selectedListId: string;\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        if (params.listId) {\n          this.selectedListId = params.listId;\n          this.taskService.getTasks(params.listId).subscribe((tasks: Task[]) => {\n            this.tasks = tasks;\n          })\n        } else {\n          this.tasks = undefined;\n        }\n      }\n    )\n\n    this.taskService.getLists().subscribe((lists: List[]) => {\n      this.lists = lists;\n    })\n    \n  }\n\n  onTaskClick(task: Task) {\n    // we want to set the task to completed\n    this.taskService.complete(task).subscribe(() => {\n      // the task has been set to completed successfully\n      console.log(\"Completed successully!\");\n      task.completed = !task.completed;\n    })\n  }\n\n  onDeleteListClick() {\n    this.taskService.deleteList(this.selectedListId).subscribe((res: any) => {\n      this.router.navigate(['/lists']);\n      console.log(res);\n    })\n  }\n\n  onDeleteTaskClick(id: string) {\n    this.taskService.deleteTask(this.selectedListId, id).subscribe((res: any) => {\n      this.tasks = this.tasks.filter(val => val._id !== id);\n      console.log(res);\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n  <div class=\"task-manager-container\">\n\n    <div class=\"sidebar has-background-white\">\n      <h1 class=\"title has-text-primary\">\n        Add Task\n      </h1>\n\n      <div class=\"list-menu\">\n        <a class=\"list-menu-item\" *ngFor=\"let list of lists.users\" [routerLink]=\"['/lists', list._id]\" routerLinkActive=\"is-active\">\n          <p></p>\n        </a>\n\n      </div>\n\n      <button class=\"button is-primary has-text-white\" routerLink=\"/new-list\">+ New Task</button>\n\n    </div>\n\n    <div class=\"task-list-container has-background-light\">\n      <div *ngIf=\"tasks\">\n        <div class=\"top-bar\">\n          <h1 class=\"title has-text-primary\">\n            Tasks\n          </h1>\n          <div class=\"dropdown is-hoverable is-right\">\n            <div class=\"dropdown-trigger\">\n              <button class=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu4\">\n                <span class=\"icon is-small\">\n                  <i class=\"fas fa-cog\" aria-hidden=\"true\"></i>\n                </span>\n              </button>\n            </div>\n            <div class=\"dropdown-menu\" id=\"dropdown-menu4\" role=\"menu\">\n              <div class=\"dropdown-content\">\n                <a [routerLink]=\"['/edit-list', selectedListId]\" class=\"dropdown-item\">\n                  Edit\n                </a>\n                <a (click)=\"onDeleteListClick()\" class=\"dropdown-item has-text-danger\">\n                  Delete\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Task Elements -->\n        <div class=\"task\" *ngFor=\"let task of tasks\" (click)=\"onTaskClick(task)\" [ngClass]=\"{ 'completed': task.completed }\">\n          <div class=\"task-text\">\n            <p>{{ task.title }}</p>\n          </div>\n          <div class=\"task-buttons\">\n\n            <button class=\"button\" [routerLink]=\"['/lists', selectedListId, 'edit-task', task._id]\">\n              <div class=\"icon\">\n                <i class=\"fas fa-edit\"></i>\n              </div>\n            </button>\n\n            <button class=\"button is-danger\" (click)=\"onDeleteTaskClick(task._id)\" style=\"margin-left: 10px;\">\n              <div class=\"icon\">\n                <i class=\"fas fa-trash\"></i>\n              </div>\n            </button>\n\n          </div>\n        </div>\n\n        <h3 class=\"empty-state-text\" *ngIf=\"tasks.length === 0\">There are no tasks here! Click the add button to create\n          a new task.</h3>\n\n        <button routerLink=\"./new-task\" class=\"circle-add-button button is-primary\">\n          <img src=\"../../../assets/plus-icon.svg\" class=\"has-text-white\">\n        </button>\n      </div>\n\n      <div *ngIf=\"!tasks\">\n        <h3 class=\"empty-state-text\">User List</h3>\n      </div>\n\n      <div class=\"list-menu\">\n        <a class=\"list-menu-item\" *ngFor=\"let list of lists.users\" [routerLink]=\"['/lists', list._id]\" routerLinkActive=\"is-active\">\n            <img class=\"img\" src={{list.picture}}/>    \n          <p>{{ list.name }}</p>\n        </a>\n\n      </div>\n\n    </div>\n\n    \n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth.service';\nimport { HttpResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLoginButtonClicked(email: string, password: string) {\n    this.authService.login(email, password).subscribe((res: HttpResponse<any>) => {\n      if (res.status === 200) {\n        // we have logged in successfully\n        this.router.navigate(['/lists']);\n      }\n      console.log(res);\n      \n    });\n  }\n\n}\n","<div class=\"centered-content\">\n  <div class=\"white-box\">\n\n    <h1 class=\"title has-text-primary\">Login</h1>\n    \n    <div class=\"field\">\n      <p class=\"control has-icons-left has-icons-right\">\n        <input #emailInput class=\"input has-background-light\" type=\"email\" placeholder=\"Email\">\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-envelope\"></i>\n        </span>\n      </p>\n    </div>\n    <div class=\"field\">\n      <p class=\"control has-icons-left\">\n        <input #pwInput class=\"input has-background-light\" type=\"password\" placeholder=\"Password\">\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-lock\"></i>\n        </span>\n      </p>\n    </div>\n    <div class=\"field\" style=\"display: flex; justify-content: flex-end;\">\n      <p class=\"control\">\n        <button class=\"button is-success has-text-white\" (click)=\"onLoginButtonClicked(emailInput.value, pwInput.value)\">\n          Login\n        </button>\n      </p>\n    </div>\n\n    <br>\n\n    <p class=\"has-text-grey\">Not got an account? <a routerLink=\"/signup\">Sign up</a> now!</p>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrls: ['./new-task.component.scss']\n})\nexport class NewTaskComponent implements OnInit {\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) { }\n\n  listId: string;\n  \n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.listId = params['listId'];\n      }\n    )\n  }\n\n  createTask(title: string) {\n    this.taskService.createTask(title, this.listId).subscribe((newTask: Task) => {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n  <div class=\"modal-box\">\n    <h1 class=\"title\">\n      Create a new task\n    </h1>\n\n    <input #taskTitleInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter task name...\">\n    <br><br>\n    <div class=\"buttons is-right\">\n      <button class=\"button is-medium\" routerLink=\"/\">Cancel</button>\n      <button class=\"button is-primary has-text-white is-medium\" (click)=\"createTask(taskTitleInput.value)\">Create</button>\n    </div>\n\n    \n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { WebRequestService } from './web-request.service';\nimport { Task } from './models/task.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private webReqService: WebRequestService) { }\n\n\n  getLists() {\n    return this.webReqService.get('lists');\n  }\n\n  createList(title: string) {\n    // We want to send a web request to create a list\n    return this.webReqService.post('lists', { title });\n  }\n\n  updateList(id: string, title: string) {\n    // We want to send a web request to update a list\n    return this.webReqService.patch(`lists/${id}`, { title });\n  }\n\n  updateTask(listId: string, taskId: string, title: string) {\n    // We want to send a web request to update a list\n    return this.webReqService.patch(`lists/${listId}/tasks/${taskId}`, { title });\n  }\n\n  deleteTask(listId: string, taskId: string) {\n    return this.webReqService.delete(`lists/${listId}/tasks/${taskId}`);\n  }\n\n  deleteList(id: string) {\n    return this.webReqService.delete(`lists/${id}`);\n  }\n\n  getTasks(listId: string) {\n    return this.webReqService.get(`lists/${listId}/tasks`);\n  }\n\n  createTask(title: string, listId: string) {\n    // We want to send a web request to create a task\n    return this.webReqService.post(`lists/${listId}/tasks`, { title });\n  }\n\n  complete(task: Task) {\n    return this.webReqService.patch(`lists/${task._listId}/tasks/${task._id}`, {\n      completed: !task.completed\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TaskService } from 'src/app/task.service';\n\n@Component({\n  selector: 'app-edit-list',\n  templateUrl: './edit-list.component.html',\n  styleUrls: ['./edit-list.component.scss']\n})\nexport class EditListComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private taskService: TaskService, private router: Router) { }\n\n  listId: string;\n\n  \n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.listId = params.listId;\n        console.log(params.listId);\n      }\n    )\n  }\n\n  updateList(title: string) {\n    this.taskService.updateList(this.listId, title).subscribe(() => {\n      this.router.navigate(['/lists', this.listId]);\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n      <h1 class=\"title\">\n        Edit list\n      </h1>\n  \n      <input #listTitleInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter list name...\">\n      <br><br>\n      <div class=\"buttons is-right\">\n        <button class=\"button is-medium\" routerLink=\"/\">Cancel</button>\n        <button class=\"button is-primary has-text-white is-medium\" (click)=\"updateList(listTitleInput.value)\">Save</button>\n      </div>\n  \n      \n    </div>\n  </div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { AuthService } from 'src/app/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup-page',\n  templateUrl: './signup-page.component.html',\n  styleUrls: ['./signup-page.component.scss']\n})\nexport class SignupPageComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSignupButtonClicked(email: string, password: string) {\n    this.authService.signup(email, password).subscribe((res: HttpResponse<any>) => {\n      console.log(res);\n      this.router.navigate(['/lists']);\n    });\n  }\n\n}\n","<div class=\"centered-content\">\n  <div class=\"white-box\">\n\n    <h1 class=\"title has-text-primary\">Sign up</h1>\n    \n    <div class=\"field\">\n      <p class=\"control has-icons-left has-icons-right\">\n        <input #emailInput class=\"input has-background-light\" type=\"email\" placeholder=\"Email\">\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-envelope\"></i>\n        </span>\n      </p>\n    </div>\n    <div class=\"field\">\n      <p class=\"control has-icons-left\">\n        <input #pwInput class=\"input has-background-light\" type=\"password\" placeholder=\"Password\">\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-lock\"></i>\n        </span>\n      </p>\n    </div>\n    <div class=\"field\" style=\"display: flex; justify-content: flex-end;\">\n      <p class=\"control\">\n        <button class=\"button is-success has-text-white\" (click)=\"onSignupButtonClicked(emailInput.value, pwInput.value)\">\n          Sign up\n        </button>\n      </p>\n    </div>\n    <br>\n\n    <p class=\"has-text-grey\">Already got an account? <a routerLink=\"/login\">Login</a> now!</p>\n\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NewListComponent } from './pages/new-list/new-list.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { WebReqInterceptor } from './web-req.interceptor';\nimport { SignupPageComponent } from './pages/signup-page/signup-page.component';\nimport { EditListComponent } from './pages/edit-list/edit-list.component';\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskViewComponent,\n    NewListComponent,\n    NewTaskComponent,\n    LoginPageComponent,\n    SignupPageComponent,\n    EditListComponent,\n    EditTaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: WebReqInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { WebRequestService } from './web-request.service';\nimport { Router } from '@angular/router';\nimport { shareReplay, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private webService: WebRequestService, private router: Router, private http: HttpClient) { }\n\n  login(email: string, password: string) {\n    return this.webService.login(email, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse<any>) => {\n        // the auth tokens will be in the header of this response\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"LOGGED IN!\");\n      })\n    )\n  }\n\n\n  signup(email: string, password: string) {\n    return this.webService.signup(email, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse<any>) => {\n        // the auth tokens will be in the header of this response\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"Successfully signed up and now logged in!\");\n      })\n    )\n  }\n\n\n\n  logout() {\n    this.removeSession();\n\n    this.router.navigate(['/login']);\n  }\n\n  getAccessToken() {\n    return localStorage.getItem('x-access-token');\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem('x-refresh-token');\n  }\n\n  getUserId() {\n    return localStorage.getItem('user-id');\n  }\n\n  setAccessToken(accessToken: string) {\n    localStorage.setItem('x-access-token', accessToken)\n  }\n  \n  private setSession(userId: string, accessToken: string, refreshToken: string) {\n    localStorage.setItem('user-id', userId);\n    localStorage.setItem('x-access-token', accessToken);\n    localStorage.setItem('x-refresh-token', refreshToken);\n  }\n\n  private removeSession() {\n    localStorage.removeItem('user-id');\n    localStorage.removeItem('x-access-token');\n    localStorage.removeItem('x-refresh-token');\n  }\n\n  getNewAccessToken() {\n    return this.http.get(`${this.webService.ROOT_URL}/users/me/access-token`, {\n      headers: {\n        'x-refresh-token': this.getRefreshToken(),\n        '_id': this.getUserId()\n      },\n      observe: 'response'\n    }).pipe(\n      tap((res: HttpResponse<any>) => {\n        this.setAccessToken(res.headers.get('x-access-token'));\n      })\n    )\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, empty, Subject } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { catchError, tap, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebReqInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) { }\n\n  refreshingAccessToken: boolean;\n\n  accessTokenRefreshed: Subject<any> = new Subject();\n\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    // Handle the request\n    request = this.addAuthHeader(request);\n\n    // call next() and handle the response\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n\n        if (error.status === 401) {\n          // 401 error so we are unauthorized\n\n          // refresh the access token\n          return this.refreshAccessToken()\n            .pipe(\n              switchMap(() => {\n                request = this.addAuthHeader(request);\n                return next.handle(request);\n              }),\n              catchError((err: any) => {\n                console.log(err);\n                this.authService.logout();\n                return empty();\n              })\n            )\n        }\n\n        return throwError(error);\n      })\n    )\n  }\n\n  refreshAccessToken() {\n    if (this.refreshingAccessToken) {\n      return new Observable(observer => {\n        this.accessTokenRefreshed.subscribe(() => {\n          // this code will run when the access token has been refreshed\n          observer.next();\n          observer.complete();\n        })\n      })\n    } else {\n      this.refreshingAccessToken = true;\n      // we want to call a method in the auth service to send a request to refresh the access token\n      return this.authService.getNewAccessToken().pipe(\n        tap(() => {\n          console.log(\"Access Token Refreshed!\");\n          this.refreshingAccessToken = false;\n          this.accessTokenRefreshed.next();\n        })\n      )\n    }\n    \n  }\n\n\n  addAuthHeader(request: HttpRequest<any>) {\n    // get the access token\n    const token = this.authService.getAccessToken();\n\n    if (token) {\n      // append the access token to the request header\n      return request.clone({\n        setHeaders: {\n          'x-access-token': token\n        }\n      })\n    }\n    return request;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class WebRequestService {\n\n  readonly ROOT_URL;\n  \n\n  constructor(private http: HttpClient) {\n    this.ROOT_URL = 'https://devza.com/tests/tasks';\n    let headers = new HttpHeaders()\n    .set('content-type', 'application/json')\n    .set('Access-Control-Allow-Origin', '*');\n   headers = headers.set('AuthToken', 'BYK2Volx0AaJNUQHvqjbWGl9puN5YnnQ');\n   \n  }\n\n  get(uri: string) {\n    return this.http.get(`${this.ROOT_URL}/listusers`,{headers:{\n      'AuthToken': 'BYK2Volx0AaJNUQHvqjbWGl9puN5YnnQ'\n    }});\n  }\n\n  post(uri: string, payload: Object) {\n    return this.http.post(`${this.ROOT_URL}/create`, payload,{headers:{\n      'AuthToken': 'BYK2Volx0AaJNUQHvqjbWGl9puN5YnnQ'\n    }});\n  }\n\n  patch(uri: string, payload: Object) {\n    return this.http.patch(`${this.ROOT_URL}/update`, payload),{headers:{\n      'AuthToken': 'BYK2Volx0AaJNUQHvqjbWGl9puN5YnnQ'\n    }};\n  }\n\n  delete(uri: string) {\n    return this.http.delete(`${this.ROOT_URL}/delete`,{headers:{\n      'AuthToken': 'BYK2Volx0AaJNUQHvqjbWGl9puN5YnnQ'\n    }});\n  }\n\n  login(email: string, password: string) {\n    return this.http.post(`${this.ROOT_URL}/users/login`, {\n      email,\n      password\n    }, {\n        observe: 'response'\n      });\n  }\n\n  signup(email: string, password: string) {\n    return this.http.post(`${this.ROOT_URL}/users`, {\n      email,\n      password\n    }, {\n        observe: 'response'\n      });\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { TaskService } from 'src/app/task.service';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.scss']\n})\nexport class EditTaskComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private taskService: TaskService, private router: Router) { }\n\n  taskId: string;\n  listId: string;\n\n  \n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.taskId = params.taskId;\n        this.listId = params.listId;\n      }\n    )\n  }\n\n  updateTask(title: string) {\n    this.taskService.updateTask(this.listId, this.taskId, title).subscribe(() => {\n      this.router.navigate(['/lists', this.listId]);\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n      <h1 class=\"title\">\n        Edit task\n      </h1>\n  \n      <input #taskTitleInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter task name...\">\n      <br><br>\n      <div class=\"buttons is-right\">\n        <button class=\"button is-medium\" routerLink=\"/\">Cancel</button>\n        <button class=\"button is-primary has-text-white is-medium\" (click)=\"updateTask(taskTitleInput.value)\">Save</button>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { Router } from '@angular/router';\nimport { List } from 'src/app/models/list.model';\n\n@Component({\n  selector: 'app-new-list',\n  templateUrl: './new-list.component.html',\n  styleUrls: ['./new-list.component.scss']\n})\nexport class NewListComponent implements OnInit {\n\n  constructor(private taskService: TaskService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  createList(title: string) {\n    this.taskService.createList(title).subscribe((list: List) => {\n      console.log(list);\n      // Now we navigate to /lists/task._id\n      this.router.navigate([ '/lists', list._id ]); \n    });\n  }\n\n}\n","<div class=\"centered-content\">\n  <div class=\"modal-box\">\n    <h1 class=\"title\">\n      Create a new Task\n    </h1>\n\n    <input #listTitleInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter list name...\">\n    <br><br>\n    <div class=\"buttons is-right\">\n      <button class=\"button is-medium\" routerLink=\"/\">Cancel</button>\n      <button class=\"button is-primary has-text-white is-medium\" (click)=\"createList(listTitleInput.value)\">Create</button>\n    </div>\n\n    \n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\nimport { NewListComponent } from './pages/new-list/new-list.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { SignupPageComponent } from './pages/signup-page/signup-page.component';\nimport { EditListComponent } from './pages/edit-list/edit-list.component';\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/lists', pathMatch: 'full' },\n  { path: 'new-list', component: NewListComponent },\n  { path: 'edit-list/:listId', component: EditListComponent },\n  { path: 'login', component: LoginPageComponent },\n  { path: 'signup', component: SignupPageComponent },\n  { path: 'lists', component: TaskViewComponent },\n  { path: 'lists/:listId', component: TaskViewComponent },\n  { path: 'lists/:listId/new-task', component: NewTaskComponent },\n  { path: 'lists/:listId/edit-task/:taskId', component: EditTaskComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}